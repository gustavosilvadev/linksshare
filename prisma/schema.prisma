// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  name      String
  lastName  String  @map("last_name")
  email     String
  userType  String  @map("user_type")
  userName  String  @map("user_name")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model UserAccess {
  id        String   @id @default(uuid()) @db.Uuid
  userId    String   @map("id_user")
  password  String
  userAdmin Boolean  @map("user_admin")
  status    Boolean  @default(true)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

}

model GroupUser {
  id          String   @id @default(uuid()) @db.Uuid
  userId      String   @map("user_id")
  groupName   String   @map("group_name")
  statusGroup Boolean   @default(true) @map("status_group")
  imgIconGroup String @map("img_icon_group")
  createdAt DateTime @default(now()) @map("created_at")

}

model Link {
  id            String   @id @default(uuid()) @db.Uuid
  userId        String   @map("user_id")
  name          String
  href          String
  description   String
  viewStatus    Boolean @map("view_status")
  positionLink  Int     @map("position_link")
  previewAfterClick Boolean @map("preview_after_click")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
}

model CustomPage {
  id        String   @id @default(uuid()) @db.Uuid
  linkId   String   @map("link_id")
  userId    String   @map("user_id")
  namePage  String   @map("name_page")
  themePage String   @map("theme_page")
  icons     String

}

model ClickLink {
  id        String   @id @default(uuid()) @db.Uuid
  linkId   String   @map("link_id")
  addressIp String   @map("address_ip")
  createdAt DateTime @default(now()) @map("created_at")

}

model AccessedPage {
  id        String   @id @default(uuid()) @db.Uuid
  linkId   String   @map("link_id")
  pageUrl   String   @map("page_url")
  addressIp String   @map("address_ip")
  createdAt DateTime @default(now()) @map("created_at")

}

model IntegrationPlatform {
  id        String   @id @default(uuid()) @db.Uuid
  linkId   String   @map("link_id")
  api       String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
}